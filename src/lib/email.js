import { Resend } from "resend";
import dotenv from "dotenv";

dotenv.config(); // ‚úÖ Cargar las variables de entorno

const resend = new Resend(process.env.RESEND_API_KEY);

/**
 * üì© Enviar email de verificaci√≥n de cuenta
 */
export async function sendVerificationEmail(email, token) {
  const confirmUrl = `${process.env.NEXT_PUBLIC_APP_URL}/auth/verify?token=${token}`;

  try {
    const response = await resend.emails.send({
      from: "no-reply@ila-web.de", // üö® Aseg√∫rate de que esta es una direcci√≥n v√°lida del dominio verificado
      to: email,
      subject: "Verifica tu cuenta en ILA",
      html: `
          <h2>¬°Bienvenido a ILA!</h2>
          <p>Por favor, verifica tu cuenta haciendo clic en el siguiente enlace:</p>
          <a href="${confirmUrl}" target="_blank">Verificar cuenta</a>
        `,
    });

    console.log("‚úÖ Correo enviado con √©xito:", response);
    return response;
  } catch (error) {
    console.error("‚ùå Error al enviar correo:", error);
    throw new Error("No se pudo enviar el correo de verificaci√≥n.");
  }
}

/**
 * üîë Enviar email para restablecer contrase√±a
 */
export async function sendPasswordResetEmail(email, token) {
  const resetUrl = `${process.env.NEXT_PUBLIC_APP_URL}/auth/reset-password?token=${token}`;

  try {
    const response = await resend.emails.send({
      from: "no-reply@ila-web.de", // üö® Misma direcci√≥n verificada
      to: email,
      subject: "Recupera tu contrase√±a en ILA",
      html: `
          <h2>Restablecer tu contrase√±a</h2>
          <p>Has solicitado restablecer tu contrase√±a. Haz clic en el siguiente enlace para continuar:</p>
          <a href="${resetUrl}" target="_blank" style="display: inline-block; padding: 10px 20px; background-color: #007bff; color: #fff; text-decoration: none; border-radius: 5px;">Restablecer contrase√±a</a>
          <p>Este enlace expirar√° en 1 hora.</p>
          <p>Si no solicitaste este cambio, ignora este mensaje.</p>
        `,
    });

    console.log("‚úÖ Correo de recuperaci√≥n enviado:", response);
    return response;
  } catch (error) {
    console.error("‚ùå Error al enviar correo de recuperaci√≥n:", error);
    throw new Error("No se pudo enviar el correo de recuperaci√≥n.");
  }
}

/**
 * üì© Enviar email de invitaci√≥n de admin
 */
export async function sendAdminInvitationEmail(email, token) {
  const inviteUrl = `${process.env.NEXT_PUBLIC_APP_URL}/auth/signup?token=${token}`;

  try {
    const response = await resend.emails.send({
      from: "no-reply@ila-web.de",
      to: email,
      subject: "Invitaci√≥n para ser Administrador en ILA",
      html: `
          <h2>Has sido invitado como Administrador</h2>
          <p>Haz clic en el siguiente enlace para completar tu registro:</p>
          <a href="${inviteUrl}" target="_blank" style="display: inline-block; padding: 10px 20px; background-color: #ff4500; color: #fff; text-decoration: none; border-radius: 5px;">Aceptar invitaci√≥n</a>
          <p>Este enlace expirar√° en 24 horas.</p>
        `,
    });

    console.log("‚úÖ Invitaci√≥n de admin enviada:", response);
    return response;
  } catch (error) {
    console.error("‚ùå Error al enviar invitaci√≥n de admin:", error);
    throw new Error("No se pudo enviar la invitaci√≥n.");
  }
}
